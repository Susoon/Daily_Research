!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-gpu-architecture	test/gpu_infinite_loop/Makefile	/^	nvcc --gpu-architecture=sm_$(SMV) -o $@ $^ $(CUDA_LIBPATH) $(CUDA_INC) -lcudart -lcuda $/;"	m
APP	Makefile	/^APP = dpdk.o$/;"	m
ASSERT	include/sh_handler.h	21;"	d
ASSERTRT	include/sh_handler.h	31;"	d
BATCH	src/dpdk.c	8;"	d	file:
BATCH_DUMP	src/dpdk.c	5;"	d	file:
CFLAGS	Makefile	/^CFLAGS = -O3 $(shell $(PKGCONF) --cflags libdpdk)$/;"	m
CUDA	Makefile	/^CUDA ?= \/usr\/local\/cuda-10.2$/;"	m
CUDA	test/gpu_infinite_loop/Makefile	/^CUDA ?= \/usr\/local\/cuda-10.2$/;"	m
CUDA_INC	Makefile	/^CUDA_INC := -I$(CUDA)\/include $/;"	m
CUDA_INC	test/gpu_infinite_loop/Makefile	/^CUDA_INC := -I$(CUDA)\/include $/;"	m
CUDA_LIBPATH	Makefile	/^CUDA_LIBPATH := -L$(CUDA)\/lib64 -L$(CUDA)\/lib -L\/usr\/lib64\/nvidia -L\/usr\/lib\/nvidia$/;"	m
CUDA_LIBPATH	test/gpu_infinite_loop/Makefile	/^CUDA_LIBPATH := -L$(CUDA)\/lib64 -L$(CUDA)\/lib -L\/usr\/lib64\/nvidia -L\/usr\/lib\/nvidia$/;"	m
DEFAULT_PKT_BURST	include/dpdk.h	25;"	d
DUMP	src/dpdk.c	4;"	d	file:
END	include/sh_handler.h	46;"	d
GPU_PAGE_MASK	include/sh_handler.h	40;"	d
GPU_PAGE_SHIFT	include/sh_handler.h	38;"	d
GPU_PAGE_SIZE	include/sh_handler.h	39;"	d
INC	Makefile	/^INC = -I$(shell pwd)\/include$/;"	m
INC_DIR	Makefile	/^INC_DIR := $(shell pwd)\/include$/;"	m
LARGE	test/type_conversion/type_test.c	4;"	d	file:
LDFLAGS_SHARED	Makefile	/^LDFLAGS_SHARED = $(shell $(PKGCONF) --libs libdpdk)$/;"	m
LIB_DIR	Makefile	/^LIB_DIR := $(shell pwd)\/lib$/;"	m
LOOP_NUM	include/dpdk.h	26;"	d
MAX_MAP_LCORES	include/l2p.h	25;"	d
MAX_MAP_PORTS	include/l2p.h	24;"	d
MAX_MATRIX_ENTRIES	include/l2p.h	21;"	d
MAX_STRING	include/l2p.h	22;"	d
MBUF_CACHE_SIZE	include/dpdk.h	23;"	d
MID	test/type_conversion/type_test.c	11;"	d	file:
NO_TYPE	include/l2p.h	/^enum { NO_TYPE = 0, RX_TYPE = 0x01, TX_TYPE = 0x02 };$/;"	e	enum:__anon1
NUM_MBUFS_DEFAULT	include/dpdk.h	22;"	d
ONELINE	src/dpdk.c	3;"	d	file:
ONE_SEC	include/sh_handler.h	60;"	d
PC_FILE	Makefile	/^PC_FILE := $(shell $(PKGCONF) --path libdpdk 2>\/dev\/null)$/;"	m
PKGCONF	Makefile	/^PKGCONF = pkg-config$/;"	m
PKT_BATCH	include/sh_handler.h	49;"	d
PKT_BATCH_SIZE	include/sh_handler.h	56;"	d
PKT_SIZE	include/sh_handler.h	48;"	d
PTHREAD_CNT	src/dpdk.c	10;"	d	file:
RTE_TARGET	Makefile	/^RTE_TARGET ?= $(notdir $(abspath $(dir $(firstword $(wildcard $(RTE_SDK)\/*\/.config)))))$/;"	m
RX_DESC_DEFAULT	include/dpdk.h	24;"	d
RX_LOOP_CNT	src/dpdk.c	9;"	d	file:
RX_NB	include/sh_handler.h	58;"	d
RX_TYPE	include/l2p.h	/^enum { NO_TYPE = 0, RX_TYPE = 0x01, TX_TYPE = 0x02 };$/;"	e	enum:__anon1
SEND	src/dpdk.c	7;"	d	file:
SMALL	test/type_conversion/type_test.c	15;"	d	file:
SMV	Makefile	/^SMV = 30$/;"	m
SMV	test/gpu_infinite_loop/Makefile	/^SMV = 30$/;"	m
SRCS-y	Makefile	/^SRCS-y := $(SRC_DIR)\/dpdk.c$/;"	m
SRC_DIR	Makefile	/^SRC_DIR := $(shell pwd)\/src$/;"	m
START_BLU	include/sh_handler.h	45;"	d
START_GRN	include/sh_handler.h	43;"	d
START_RED	include/sh_handler.h	42;"	d
START_YLW	include/sh_handler.h	44;"	d
SWAP	src/dpdk.c	6;"	d	file:
TEST_NUM	test/type_conversion/type_test.c	20;"	d	file:
TX_TYPE	include/l2p.h	/^enum { NO_TYPE = 0, RX_TYPE = 0x01, TX_TYPE = 0x02 };$/;"	e	enum:__anon1
__DPDK_H_	include/dpdk.h	2;"	d
__SH_HANDLER_H_	include/sh_handler.h	2;"	d
__TEST_HANDLER_H_	test/gpu_infinite_loop/thand.h	2;"	d
__WR_L2P_H	include/l2p.h	10;"	d
ck_dpdk	include/dpdk.h	/^ck_dpdk_t ck_dpdk; $/;"	v
ck_dpdk	include/dpdk.h	/^typedef struct ck_dpdk{$/;"	s
ck_dpdk_t	include/dpdk.h	/^}ck_dpdk_t;$/;"	t	typeref:struct:ck_dpdk
copy_to_arr	src/dpdk.c	/^static void copy_to_arr(struct rte_mbuf * buf[], unsigned char * batch_buf, int size)$/;"	f	file:
copy_to_struct	src/dpdk.c	/^static void copy_to_struct(struct rte_mbuf * buf[], unsigned char * batch_buf, int size)$/;"	f	file:
cpu_monitoring_loop	src/dpdk.c	/^void *cpu_monitoring_loop(void *data)$/;"	f
curr_stats	include/dpdk.h	/^	eth_stats_t curr_stats;$/;"	m	struct:port_info
default_port_conf	include/dpdk.h	/^static struct rte_eth_conf default_port_conf = {$/;"	v	typeref:struct:rte_eth_conf
dpdk_handler	src/dpdk.c	/^void dpdk_handler(int argc, char **argv)$/;"	f
eth_stats_t	include/dpdk.h	/^typedef struct rte_eth_stats eth_stats_t;$/;"	t	typeref:struct:rte_eth_stats
get_lcore_priv	include/l2p.h	/^get_lcore_priv(l2p_t *l2p, uint16_t lid)$/;"	f
get_lcore_rxcnt	include/l2p.h	/^get_lcore_rxcnt(l2p_t *l2p, uint16_t lid)$/;"	f
get_lcore_txcnt	include/l2p.h	/^get_lcore_txcnt(l2p_t *l2p, uint16_t lid)$/;"	f
get_map	include/l2p.h	/^get_map(l2p_t *l2p, uint16_t pid, uint16_t lid)$/;"	f
get_port_lid	include/l2p.h	/^get_port_lid(l2p_t *l2p, uint16_t pid, uint16_t qid)$/;"	f
get_port_nb_lids	include/l2p.h	/^get_port_nb_lids(l2p_t *l2p, uint16_t pid)$/;"	f
get_port_priv	include/l2p.h	/^get_port_priv(l2p_t *l2p, uint16_t pid)$/;"	f
get_port_rxcnt	include/l2p.h	/^get_port_rxcnt(l2p_t *l2p, uint16_t pid)$/;"	f
get_port_txcnt	include/l2p.h	/^get_port_txcnt(l2p_t *l2p, uint16_t pid)$/;"	f
get_rx_pid	include/l2p.h	/^get_rx_pid(l2p_t *l2p, uint16_t lid, uint16_t idx)$/;"	f
get_rxque	include/l2p.h	/^get_rxque(l2p_t *l2p, uint16_t lid, uint16_t pid)$/;"	f
get_tx_pid	include/l2p.h	/^get_tx_pid(l2p_t *l2p, uint16_t lid, uint16_t idx)$/;"	f
get_txque	include/l2p.h	/^get_txque(l2p_t *l2p, uint16_t lid, uint16_t pid)$/;"	f
get_type	include/l2p.h	/^get_type(l2p_t *l2p, uint16_t lid)$/;"	f
info	include/dpdk.h	/^	port_info_t info[RTE_MAX_LCORE];$/;"	m	struct:ck_dpdk
l2p	include/dpdk.h	/^l2p_t *l2p;$/;"	v
l2p_create	include/l2p.h	/^l2p_create(void)$/;"	f
l2p_t	include/l2p.h	/^} l2p_t;$/;"	t	typeref:struct:__anon6
launch_one_lcore	src/dpdk.c	/^int launch_one_lcore(void *arg __rte_unused)$/;"	f
lcore_is_running	include/dpdk.h	/^static __inline__ int32_t lcore_is_running(l2p_t *l2p, uint16_t lid)$/;"	f
lcores	include/l2p.h	/^	lobj_t lcores[RTE_MAX_LCORE];$/;"	m	struct:__anon6
lid	include/l2p.h	/^	uint16_t lid;$/;"	m	struct:__anon2
lids	include/l2p.h	/^	uint16_t lids[RTE_MAX_LCORE];$/;"	m	struct:__anon3
lobj_t	include/l2p.h	/^} lobj_t;	\/* lcore type and ports\/qids *\/$/;"	t	typeref:struct:__anon2
main	main.c	/^int main(int argc, char ** argv)$/;"	f
main	test/cudaMemcpy_test/MakeRandom.c	/^int main(void)$/;"	f
main	test/type_conversion/type_test.c	/^int main(void)$/;"	f
map	include/l2p.h	/^	rxtx_t map[MAX_MAP_PORTS][MAX_MAP_LCORES];$/;"	m	struct:__anon6
monitor	main.c	/^void * monitor(void * data)$/;"	f
nb_lids	include/l2p.h	/^	uint16_t nb_lids;$/;"	m	struct:__anon3
pg_dump_l2p	include/l2p.h	/^pg_dump_l2p(l2p_t *l2p)$/;"	f
pg_inc_rx	include/l2p.h	/^pg_inc_rx(l2p_t *l2p, uint16_t pid, uint16_t lid) {$/;"	f
pg_inc_tx	include/l2p.h	/^pg_inc_tx(l2p_t *l2p, uint16_t pid, uint16_t lid) {$/;"	f
pg_lcore_is_running	include/l2p.h	/^pg_lcore_is_running(l2p_t *l2p, uint16_t lid)$/;"	f
pg_new_rxque	include/l2p.h	/^pg_new_rxque(l2p_t *l2p, uint16_t pid)$/;"	f
pg_new_txque	include/l2p.h	/^pg_new_txque(l2p_t *l2p, uint16_t pid)$/;"	f
pg_raw_dump_l2p	include/l2p.h	/^pg_raw_dump_l2p(l2p_t *l2p)$/;"	f
pg_set_lcore_priv	include/l2p.h	/^pg_set_lcore_priv(l2p_t *l2p, uint16_t lid, void *ptr)$/;"	f
pg_set_port_priv	include/l2p.h	/^pg_set_port_priv(l2p_t *l2p, uint16_t pid, void *ptr)$/;"	f
pg_start_lcore	include/l2p.h	/^pg_start_lcore(l2p_t *l2p, uint16_t lid)$/;"	f
pg_stop_lcore	include/l2p.h	/^pg_stop_lcore(l2p_t *l2p, uint16_t lid)$/;"	f
pid	include/l2p.h	/^	uint16_t pid;$/;"	m	struct:__anon3
pids	include/l2p.h	/^	pq_t pids;$/;"	m	struct:__anon2
pobj_t	include/l2p.h	/^} pobj_t;	\/* ports pointer lcores *\/$/;"	t	typeref:struct:__anon3
port_info	include/dpdk.h	/^typedef struct port_info{$/;"	s
port_info_t	include/dpdk.h	/^}port_info_t;$/;"	t	typeref:struct:port_info
ports	include/l2p.h	/^	pobj_t ports[RTE_MAX_ETHPORTS];$/;"	m	struct:__anon6
pq_s	include/l2p.h	/^typedef struct pq_s {$/;"	s
pq_t	include/l2p.h	/^} pq_t;$/;"	t	typeref:struct:pq_s
prev_stats	include/dpdk.h	/^	eth_stats_t prev_stats;$/;"	m	struct:port_info
print_pkt	src/dpdk.c	/^static void print_pkt(unsigned char * ptr)$/;"	f	file:
priv	include/l2p.h	/^	void      *priv;$/;"	m	struct:__anon3
priv	include/l2p.h	/^	void *priv;$/;"	m	struct:__anon2
put_map	include/l2p.h	/^put_map(l2p_t *l2p, uint16_t pid, uint16_t lid, uint32_t rxtx)$/;"	f
qids	include/l2p.h	/^	pq_t qids;$/;"	m	struct:__anon2
rte_ctrlmbuf_data	include/dpdk.h	28;"	d
rx	include/l2p.h	/^		uint16_t rx;$/;"	m	struct:__anon4::__anon5
rx	include/l2p.h	/^	uint16_t rx[RTE_MAX_ETHPORTS];$/;"	m	struct:pq_s
rx_cnt	include/l2p.h	/^	uint16_t rx_cnt;$/;"	m	struct:pq_s
rx_loop	src/dpdk.c	/^static void rx_loop(uint8_t lid)$/;"	f	file:
rx_qid	include/l2p.h	/^	uint16_t rx_qid;$/;"	m	struct:__anon3
rxtx	include/l2p.h	/^	uint32_t rxtx;$/;"	m	union:__anon4
rxtx_t	include/l2p.h	/^} rxtx_t;$/;"	t	typeref:union:__anon4
start_lcore	include/dpdk.h	/^static __inline__ void start_lcore(l2p_t *l2p, uint16_t lid)$/;"	f
stop	include/l2p.h	/^	volatile uint8_t stop[RTE_MAX_LCORE];$/;"	m	struct:__anon6
tx	include/l2p.h	/^		uint16_t tx;$/;"	m	struct:__anon4::__anon5
tx	include/l2p.h	/^	uint16_t tx[RTE_MAX_ETHPORTS];$/;"	m	struct:pq_s
tx_cnt	include/l2p.h	/^	uint16_t tx_cnt;$/;"	m	struct:pq_s
tx_qid	include/l2p.h	/^	uint16_t tx_qid;$/;"	m	struct:__anon3
type	include/l2p.h	/^	uint16_t type;$/;"	m	struct:__anon2
